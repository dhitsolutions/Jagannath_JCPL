using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace RamdevSales
{
    public partial class Master : Form
    {
        private UserLogin userLogin;
        public static string companyId = string.Empty;
        DataTable dt10 = new DataTable();
        ServerConnection con = new ServerConnection();
        Connection cl = new Connection();
        public Master()
        {
            
            InitializeComponent();
            lblcompanyid.Text = "Company Id: " + companyId;
            
            CompanyList ci = new CompanyList(this);
            
            ci.MdiParent = this;
            ci.StartPosition = FormStartPosition.WindowsDefaultLocation;
            ci.Show();
            
        }

        public Master(UserLogin userLogin)
        {
            // TODO: Complete member initialization
            InitializeComponent();
            this.userLogin = userLogin;
           // enablemenu(true);
        }
        public void enablemenu(bool a)
        {
            try
            {
                
                // InitializeComponent();
                //  this.userLogin = userLogin;
                masterToolStripMenuItem.Visible = a;
                SalesToolStripMenuItem.Visible = a;
                PrintToolStripMenuItem.Visible = a;
                UtilityToolStripMenuItem.Visible = a;
                ViewToolStripMenuItem.Visible = a;
                ExitToolStripMenuItem.Visible = a;
            }
            catch
            {
            }
        }

        public void disablecompany(bool a)
        {
            try
            {
                companyToolStripMenuItem.Visible = a;
            }
            catch
            {
            }
        }

        public void compId(string p)
        {
           // lblCompanyId.Text = "Company Id: "+ p;
            if (p != string.Empty)
            {
                companyId = p;
                lblcompanyid.Text = "Company Id: " + companyId;
            }
        }

        public void getView()
        {
            try
            {
                DataTable sersaledt = new DataTable();
                sersaledt = con.getdataset("select CompanyType from Company where companyId=" + companyId + "");
                if (sersaledt != null && sersaledt.Rows.Count > 0)
                {
                    if (sersaledt.Rows[0][0].ToString() == "Store")
                    {
                        saleOrderToolStripMenuItem.Visible = false;
                        purchaseOrderReportToolStripMenuItem.Visible = false;
                    }
                    else if (sersaledt.Rows[0][0].ToString() == "Factory")
                    {
                        saleOrderToolStripMenuItem.Visible = true;
                        purchaseOrderReportToolStripMenuItem.Visible = true;
                        //synchronizationToolStripMenuItem.Visible = false;
                    }
                }
                dt10 = con.getdataset("select a, u, d, v, p, mId, uId, cId from UserRights where uId='" + UserLogin.id + "' and cId= " + Master.companyId + " and isActive=1");
                if (dt10 != null)
                {
                    for (int i = 0; i < dt10.Rows.Count; i++)
                    {
                        if ((dt10.Rows[i]["mId"].ToString()) == "1")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i][3]) == false)
                            {
                                saleToolStripMenuItem.Visible = false;
                            }
                        }
                        if ((dt10.Rows[i]["mId"].ToString()) == "3")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i][3]) == false)
                            {
                                quickReceiptToolStripMenuItem.Visible = false;
                            }
                        }
                        if ((dt10.Rows[i]["mId"].ToString()) == "4")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i][3]) == false)
                            {
                                purchaseToolStripMenuItem.Visible = false;
                            }
                        }
                        if ((dt10.Rows[i]["mId"].ToString()) == "5")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i]["v"].ToString()) == false)
                            {
                                purchaseOrderToolStripMenuItem.Visible = false;
                            }
                        }
                        if ((dt10.Rows[i]["mId"].ToString()) == "6")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i][3]) == false)
                            {
                                paymentToolStripMenuItem.Visible = false;
                            }
                        }
                        if ((dt10.Rows[i]["mId"].ToString()) == "9")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i][3]) == false)
                            {
                                userToolStripMenuItem.Visible = false;
                            }
                        }
                        if ((dt10.Rows[i]["mId"].ToString()) == "10")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i][3]) == false)
                            {
                                pOSToolStripMenuItem.Visible = false;
                            }
                        }
                        if ((dt10.Rows[i]["mId"].ToString()) == "11")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i][3]) == false)
                            {
                                itemToolStripMenuItem1.Visible = false;
                            }
                        }
                        if ((dt10.Rows[i]["mId"].ToString()) == "12")
                        {
                            if (Convert.ToBoolean(dt10.Rows[i][3]) == false)
                            {
                                clientsToolStripMenuItem.Visible = false;
                            }
                        }
                    }
                }
            }
            catch { }
            finally
            {
                //  userLogin.Close();

            }

        }

        
        private void Master_Load(object sender, EventArgs e)
        {
            this.WindowState = FormWindowState.Maximized; 
        }

        private void InvoiceToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Form1 frm = new Form1();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void FloatToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ClientRegistration frm = new ClientRegistration();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void clientWiseProductMarginToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ClientWiseProductMargin frm = new ClientWiseProductMargin();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void CashPickupToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ProductMaster frm = new ProductMaster();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void PettyCashPickupToolStripMenuItem_Click(object sender, EventArgs e)
        {
            CompanyMaster frm = new CompanyMaster();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void HeldTransctionToolStripMenuItem_Click(object sender, EventArgs e)
        {
            PaymentDetail frm = new PaymentDetail();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void ExitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            this.Close();
            Application.Exit();
        }

        private void paymentStatusToolStripMenuItem_Click(object sender, EventArgs e)
        {
            //PaymentStatus frm = new PaymentStatus();
            //frm.MdiParent = this;
            //frm.StartPosition = FormStartPosition.CenterScreen;
            //frm.Show();
        }

        private void QuantityInputToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Inward frm = new Inward();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void XReportToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rptstkin frm = new rptstkin();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void dateWiseBillInvoiceToolStripMenuItem_Click(object sender, EventArgs e)
        {
            DateWiseReport frm = new DateWiseReport();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void inwardDetailsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            StockIn frm = new StockIn();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void ReprintLastReceiptToolStripMenuItem_Click(object sender, EventArgs e)
        {
            StockReport frm = new StockReport();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void ZReportToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ClientWiseSelling frm = new ClientWiseSelling();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void itemToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Itemmaster frm = new Itemmaster();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void saleToolStripMenuItem_Click(object sender, EventArgs e)
        {
            DateWiseReport frm = new DateWiseReport();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.Manual;
            frm.Show();
           
        }

        private void billToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ItemWiseStock frm = new ItemWiseStock();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void itemToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            Itemmaster frm = new Itemmaster();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();

            //string title = "TabPage " + (tabControl1.TabCount + 1).ToString();
            //TabPage myTabPage = new TabPage(title);
            //tabControl1.TabPages.Add(myTabPage);
        }

        private void groupToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Group frm = new Group();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void clientsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            ClientRegistration frm = new ClientRegistration();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void ledgerToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Ledger frm = new Ledger();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void quickReceiptToolStripMenuItem_Click(object sender, EventArgs e)
        {
            QReceipt frm = new QReceipt();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void paymentToolStripMenuItem_Click(object sender, EventArgs e)
        {
            QPayment frm = new QPayment();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void toolStripStatusLabel1_Click(object sender, EventArgs e)
        {

        }

        private void toolStripStatusLabel2_Click(object sender, EventArgs e)
        {

        }

        private void pOSBillListToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            POSBillList frm = new POSBillList();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void pOSItemListToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            POSItemList frm = new POSItemList();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void pOSToolStripMenuItem_Click(object sender, EventArgs e)
        {
            POS frm = new POS();
            
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }
        
        private void purchaseToolStripMenuItem_Click(object sender, EventArgs e)
        {
            DateWisePurchaseReport frm = new DateWisePurchaseReport("p");
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            
                frm.Show();
            
         }

        private void purchaseOrderToolStripMenuItem_Click(object sender, EventArgs e)
        {
            //DateWisePurchaseOrderReport frm = new DateWisePurchaseOrderReport();
            //frm.MdiParent = this;
            //frm.StartPosition = FormStartPosition.CenterScreen;
            //frm.Show();
        }

        private void newToolStripMenuItem_Click(object sender, EventArgs e)
        {
            CompanyInfo frm = new CompanyInfo();
            //frm.Passed(1);
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void openToolStripMenuItem_Click(object sender, EventArgs e)
        {
            CompanyList frm = new CompanyList(this);
            UserLogin ul = new UserLogin(this);
            frm.Passed(1);
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void mapCompanyPathToolStripMenuItem_Click(object sender, EventArgs e)
        {
            CompanyList ci = new CompanyList(this);

            ci.MdiParent = this;
            ci.StartPosition = FormStartPosition.WindowsDefaultLocation;
            ci.Show();
        }

        private void sQLServerSettingsToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            AddConString frm = new AddConString();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void exitToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void userToolStripMenuItem_Click(object sender, EventArgs e)
        {
            UserList frm = new UserList();
           
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void userProfileToolStripMenuItem_Click(object sender, EventArgs e)
        {
            UserRights frm = new UserRights();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void companyInfoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            CompanyInfo frm = new CompanyInfo();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void closeCompanyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            enablemenu(false);
            disablecompany(true);
            lblcompanyid.Text = "";
            companyId = string.Empty;
            CompanyList ci = new CompanyList(this);

            ci.MdiParent = this;
            ci.StartPosition = FormStartPosition.CenterScreen;
            ci.Show();
        }

        private void purchaseReturnToolStripMenuItem_Click(object sender, EventArgs e)
        {
            //PurchaseReturnList frm = new PurchaseReturnList();
            //frm.MdiParent = this;
            //frm.StartPosition = FormStartPosition.CenterScreen;
            //frm.Show();
        }

        private void saleReturnToolStripMenuItem_Click(object sender, EventArgs e)
        {
            DatewiseSaleReturn frm = new DatewiseSaleReturn();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        public static string currency = string.Empty;
        internal void setheader(DataTable companydt, string p)
        {
            this.Text = "Business Plus #170407 [" + companydt.Rows[0]["CompanyName"].ToString() + "] [FY = " + Convert.ToDateTime(companydt.Rows[0]["StartDate"]).Date.ToString("dd/MMM/yyyy") + " to " + Convert.ToDateTime(companydt.Rows[0]["EndDate"]).Date.ToString("dd/MMM/yyyy") + "] User=" + p;
            //this.Text = "Business Plus #170407 [" + companydt.Rows[0]["CompanyName"].ToString() + "] [FY = " + Convert.ToDateTime(companydt.Rows[0]["StartDate"]).Date + " to " + Convert.ToDateTime(companydt.Rows[0]["EndDate"]).Date + "] User=" + p;
           // lblcurrency.Text = "[" + companydt.Rows[0][11].ToString() + "]";
            lblcurrency.Text = "[INR]";
            currency = lblcurrency.Text;
        }

        private void pOSBillListToolStripMenuItem_Click(object sender, EventArgs e)
        {

        }

        private void openingStockEditorToolStripMenuItem_Click(object sender, EventArgs e)
        {
            OpStock frm = new OpStock();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void masterToolStripMenuItem_Click(object sender, EventArgs e)
        {

        }

        private void closeCompanyToolStripMenuItem1_Click(object sender, EventArgs e)
        {
            this.Hide();
            var form2 = new Master();
            form2.Closed += (s, args) => this.Close();
            form2.Show();
            companyId = "";
        }

        private void optionsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Options frm = new Options();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void purchaseTypeToolStripMenuItem_Click(object sender, EventArgs e)
        {
            PurchaseTypeMaster frm = new PurchaseTypeMaster();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void sqlServerSettingsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            AddConString frm = new AddConString();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void companyInfoToolStripMenuItem_Click_1(object sender, EventArgs e)
        {
            CompanyInfo frm = new CompanyInfo();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void purchaseOrderToolStripMenuItem_Click_1(object sender, EventArgs e)
        {
            DateWisePurchaseOrderReport frm = new DateWisePurchaseOrderReport();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void purchaseReturnToolStripMenuItem_Click_1(object sender, EventArgs e)
        {
            PurchaseReturnList frm = new PurchaseReturnList();
            frm.MdiParent = this;
            frm.StartPosition = FormStartPosition.CenterScreen;
            frm.Show();
        }

        private void saleOrderToolStripMenuItem_Click(object sender, EventArgs e)
        {
            //DataTable dtcomptype = new DataTable();
            //dtcomptype = cl.getdataset("Select Companytype from Company where CompanyId='" + Master.companyId + "'");
            //if (dtcomptype.Rows[0][0].ToString() == "Store")
            //{
                DateWiseSaleOrderReport frm = new DateWiseSaleOrderReport();
                frm.MdiParent = this;
                frm.StartPosition = FormStartPosition.CenterScreen;
                frm.Show();
            //}
            //else
            //{
                
            //}
        }

        private void synchronizationToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                getsync();
                //timer1.Start();
                //int j = 0;
                //DataTable dtcompType = cl.getdataset("Select CompanyType from Company where isactive=1");

                //if (dtcompType != null && dtcompType.Rows.Count > 0)
                //{
                //    if (dtcompType.Rows[0][0] == "Factory")
                //    {
                //    }
                //    else
                //    {
                //        #region
                //        DataTable dt = new DataTable();
                //        dt = cl.getdataset("select * from PurchaseOrderMaster where isactive=1 and CompanyId=" + companyId + " and isscyn=0");
                //        DataTable dtser = new DataTable();
                //        if (dt.Rows.Count > 0)
                //        {
                //            for (int i = 0; i < dt.Rows.Count; i++)
                //            {
                //                dtser = con.getdataset("select VchNo,CompanyId,id,IdToSync from PurchaseOrderMaster where isactive=1 and VchNo='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "' and IdToSync='" + dt.Rows[i]["IdToSync"].ToString() + "'");
                //                if (dtser.Rows.Count == 0)
                //                {
                //                    con.execute("INSERT INTO [dbo].[PurchaseOrderMaster]([VchNo],[OrderNo],[OrderDate],[Terms],[ClientID],[PurchaseType],[Count],[TotalQty],[TotalBasic],[TotalTax],[TotalAddTax],[TotalDiscount],[TotalNet],[isactive],[DispatchDetails],[Remarks],[OrderStatus],[CompanyId],[isGenerated],[GeneDate],[isInvoice],[InvoiceDate],[isscyn],[idToSync]) VALUES('" + dt.Rows[i][0].ToString() + "','" + dt.Rows[i][1].ToString() + "','" + dt.Rows[i][2].ToString() + "','" + dt.Rows[i][3].ToString() + "','" + dt.Rows[i][4].ToString() + "','" + dt.Rows[i][5].ToString() + "','" + dt.Rows[i][6].ToString() + "','" + dt.Rows[i][7].ToString() + "','" + dt.Rows[i][8].ToString() + "','" + dt.Rows[i][9].ToString() + "','" + dt.Rows[i][10].ToString() + "','" + dt.Rows[i][11].ToString() + "','" + dt.Rows[i][12].ToString() + "','" + dt.Rows[i][13].ToString() + "','" + dt.Rows[i][14].ToString() + "','" + dt.Rows[i][15].ToString() + "','" + dt.Rows[i][16].ToString() + "','" + dt.Rows[i][17].ToString() + "','" + dt.Rows[i][18].ToString() + "','" + dt.Rows[i][19].ToString() + "','" + dt.Rows[i][20].ToString() + "','" + dt.Rows[i][21].ToString() + "',1,'"+dt.Rows[i]["IdToSync"].ToString()+"')");
                //                    cl.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                //                    MessageBox.Show("Data inserted in purchaseordermaster in if condition.");
                //                    // con.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                //                }
                //                else if (dtser != null && dtser.Rows.Count > 0)
                //                {
                //                    //for (int j = 0; j < dtser.Rows.Count; j++)
                //                    //{
                //                    //if (Convert.ToInt16(dt.Rows[i]["VchNo"].ToString()) == Convert.ToInt16(dtser.Rows[j]["VchNo"].ToString()) && Convert.ToInt16(dt.Rows[i]["CompanyId"].ToString()) == Convert.ToInt16(dtser.Rows[j]["CompanyId"].ToString()))
                //                    //{
                //                    // dtup = con.getdataset("Select pop.*,po.companyId from purchaseorderproductmaster pop inner join purchaseordermaster pm on pm.vchno=pop.vchno where pop.isactive=1 and pop.isscyn=0 and po.companyId=" + companyId + "");
                //                    // DataTable dts1 = new DataTable();

                //                    DataTable dts1 = new DataTable();
                //                    dts1 = cl.getdataset("Select IdToSync from purchaseordermaster where IdToSync=" + dtser.Rows[i]["IdToSync"].ToString() + "");
                //                    if (dts1.Rows.Count > 0)
                //                    {
                //                        //if (dt.Rows[i]["IdToSync"].ToString() == dtser.Rows[j]["IdToSync"].ToString())
                //                        //{

                //                        con.execute("Update [dbo].[PurchaseOrderMaster] SET [Vchno]='" + dt.Rows[i]["VchNo"].ToString() + "',[OrderNo]='" + dt.Rows[i]["OrderNo"].ToString() + "', [OrderDate]='" + dt.Rows[i]["OrderDate"].ToString() + "',[Terms]='" + dt.Rows[i]["Terms"].ToString() + "',[ClientID]='" + dt.Rows[i]["ClientID"].ToString() + "',[PurchaseType]='" + dt.Rows[i]["PurchaseType"].ToString() + "',[Count]='" + dt.Rows[i]["Count"].ToString() + "',[TotalQty]='" + dt.Rows[i]["TotalQty"].ToString() + "',[TotalBasic]='" + dt.Rows[i]["TotalBasic"].ToString() + "',[TotalTax]='" + dt.Rows[i]["TotalTax"].ToString() + "',[TotalAddTax]='" + dt.Rows[i]["TotalAddTax"].ToString() + "',[TotalDiscount]='" + dt.Rows[i]["TotalDiscount"].ToString() + "',[TotalNet]='" + dt.Rows[i]["TotalNet"].ToString() + "',[isactive]='" + dt.Rows[i]["isactive"].ToString() + "',[DispatchDetails]='" + dt.Rows[i]["DispatchDetails"].ToString() + "',[Remarks]='" + dt.Rows[i]["Remarks"].ToString() + "',[OrderStatus]='" + dt.Rows[i]["OrderStatus"].ToString() + "',[CompanyId]='" + dt.Rows[i]["CompanyId"].ToString() + "',[isGenerated]='" + dt.Rows[i]["isGenerated"].ToString() + "',[GeneDate]='" + dt.Rows[i]["GeneDate"].ToString() + "',[isInvoice]='" + dt.Rows[i]["isInvoice"].ToString() + "',[InvoiceDate]='" + dt.Rows[i]["InvoiceDate"].ToString() + "',[isscyn]='" + dt.Rows[i]["isscyn"].ToString() + "' where IdToSync=" + dt.Rows[i]["IdToSync"].ToString() + "");
                //                            cl.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId=" + companyId + "");
                //                            con.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId=" + companyId + "");
                //                            MessageBox.Show("Data inserted in purchaseordermaster in else if cond.");
                //                        //}
                //                    }
                //                    else
                //                    {
                //                        con.execute("INSERT INTO [dbo].[PurchaseOrderMaster]([VchNo],[OrderNo],[OrderDate],[Terms],[ClientID],[PurchaseType],[Count],[TotalQty],[TotalBasic],[TotalTax],[TotalAddTax],[TotalDiscount],[TotalNet],[isactive],[DispatchDetails],[Remarks],[OrderStatus],[CompanyId],[isGenerated],[GeneDate],[isInvoice],[InvoiceDate],[isscyn]) VALUES('" + dt.Rows[i][0].ToString() + "','" + dt.Rows[i][1].ToString() + "','" + dt.Rows[i][2].ToString() + "','" + dt.Rows[i][3].ToString() + "','" + dt.Rows[i][4].ToString() + "','" + dt.Rows[i][5].ToString() + "','" + dt.Rows[i][6].ToString() + "','" + dt.Rows[i][7].ToString() + "','" + dt.Rows[i][8].ToString() + "','" + dt.Rows[i][9].ToString() + "','" + dt.Rows[i][10].ToString() + "','" + dt.Rows[i][11].ToString() + "','" + dt.Rows[i][12].ToString() + "','" + dt.Rows[i][13].ToString() + "','" + dt.Rows[i][14].ToString() + "','" + dt.Rows[i][15].ToString() + "','" + dt.Rows[i][16].ToString() + "','" + dt.Rows[i][17].ToString() + "','" + dt.Rows[i][18].ToString() + "','" + dt.Rows[i][19].ToString() + "','" + dt.Rows[i][20].ToString() + "','" + dt.Rows[i][21].ToString() + "','" + dt.Rows[i][22].ToString() + "')");
                //                        cl.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                //                        con.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                //                        MessageBox.Show("Data inserted in purchaseordermaster in else.");

                //                    }
                //                }

                //            }
                //        }
                //        #endregion

                //        #region
                //        DataTable dt1 = new DataTable();
                //        dt1 = cl.getdataset("select * from PurchaseOrderProductMaster where isactive=1 and isscyn=0");
                //        DataTable dtser1 = new DataTable();
                //        // DataTable dtup = new DataTable();
                //        if (dt1.Rows.Count > 0)
                //        {
                //            for (int i = 0; i < dt1.Rows.Count; i++)
                //            {
                //                dtser1 = con.getdataset("select VchNo,IdToSync from PurchaseOrderProductMaster where isactive=1 and VchNo='" + dt1.Rows[i]["VchNo"].ToString() + "' and IdToSync='" + dt1.Rows[i]["IdToSync"].ToString() + "'");
                //                if (dtser1==null || dtser1.Rows.Count == 0)
                //                {
                //                    con.execute("INSERT INTO [dbo].[PurchaseOrderProductMaster]([VchNo],[OrderNo],[OrderRunDate],[ProductName],[Qty],[Free],[Rate],[Per],[BasicAmount],[DiscountPer],[Discount],[Vat],[AddVat],[Total],[isactive],[OrderStatus],[isscyn],[IdToSync],[Description],[ProductId])VALUES('" + dt1.Rows[i]["VchNo"].ToString() + "','" + dt1.Rows[i]["OrderNo"].ToString() + "','" + dt1.Rows[i]["OrderRunDate"].ToString() + "','" + dt1.Rows[i]["ProductName"].ToString() + "','" + dt1.Rows[i]["Qty"].ToString() + "','" + dt1.Rows[i]["Free"].ToString() + "','" + dt1.Rows[i]["Rate"].ToString() + "','" + dt1.Rows[i]["Per"].ToString() + "','" + dt1.Rows[i]["BasicAmount"].ToString() + "','" + dt1.Rows[i]["DiscountPer"].ToString() + "','" + dt1.Rows[i]["Discount"].ToString() + "','" + dt1.Rows[i]["Vat"].ToString() + "','" + dt1.Rows[i]["AddVat"].ToString() + "','" + dt1.Rows[i]["Total"].ToString() + "','" + dt1.Rows[i]["isactive"].ToString() + "','" + dt1.Rows[i]["OrderStatus"].ToString() + "',1,'" + dt1.Rows[i]["IdToSync"].ToString() + "','" + dt1.Rows[i]["Description"].ToString() + "','" + dt1.Rows[i]["ProductId"].ToString() + "')");
                //                    cl.execute("UPDATE PurchaseOrderProductMaster SET PurchaseOrderProductMaster.isscyn=1 from purchaseorderproductmaster inner join purchaseordermaster on purchaseordermaster.VchNo=PurchaseOrderProductMaster.Vchno where purchaseorderproductmaster.VchNo='" + dt1.Rows[i]["VchNo"].ToString() + "' and purchaseordermaster.CompanyId='" + companyId + "'and purchaseorderproductmaster.IdToSync='" + dt1.Rows[i]["IdToSync"].ToString() + "'");
                //                    MessageBox.Show("Data inserted in purchaseordermaster in if condition.");
                //                    // con.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                //                }
                //                else if (dtser1 != null && dtser1.Rows.Count > 0)
                //                {
                //                    //for (int j = 0; j < dtser.Rows.Count; j++)
                //                    //{
                //                    //if (Convert.ToInt16(dt.Rows[i]["VchNo"].ToString()) == Convert.ToInt16(dtser.Rows[j]["VchNo"].ToString()) && Convert.ToInt16(dt.Rows[i]["CompanyId"].ToString()) == Convert.ToInt16(dtser.Rows[j]["CompanyId"].ToString()))
                //                    //{
                //                    // dtup = con.getdataset("Select pop.*,po.companyId from purchaseorderproductmaster pop inner join purchaseordermaster pm on pm.vchno=pop.vchno where pop.isactive=1 and pop.isscyn=0 and po.companyId=" + companyId + "");
                //                    // DataTable dts1 = new DataTable();

                //                    DataTable dts1 = new DataTable();
                //                    dts1 = cl.getdataset("Select IdToSync from purchaseordermaster where IdToSync=" + dtser.Rows[i]["IdToSync"].ToString() + "");
                //                    if (dts1.Rows.Count > 0)
                //                    {
                //                        con.execute("Update [dbo].[PurchaseOrderProductMaster] SET [Vchno]='" + dt1.Rows[i]["VchNo"].ToString() + "',[OrderNo]='" + dt1.Rows[i]["OrderNo"].ToString() + "', [OrderRunDate]='" + dt1.Rows[i]["OrderRunDate"].ToString() + "',[ProductName]='" + dt1.Rows[i]["ProductName"].ToString() + "',[Qty]='" + dt1.Rows[i]["Qty"].ToString() + "',[Free]='" + dt1.Rows[i]["Free"].ToString() + "',[Rate]='" + dt1.Rows[i]["Rate"].ToString() + "',[Per]='" + dt1.Rows[i]["Per"].ToString() + "',[BasicAmount]='" + dt1.Rows[i]["BasicAmount"].ToString() + "',[DiscountPer]='" + dt1.Rows[i]["DiscountPer"].ToString() + "',[Discount]='" + dt1.Rows[i]["Discount"].ToString() + "',[Vat]='" + dt1.Rows[i]["Vat"].ToString() + "',[AddVat]='" + dt1.Rows[i]["AddVat"].ToString() + "',[Total]='" + dt1.Rows[i]["Total"].ToString() + "',[isactive]='" + dt1.Rows[i]["isactive"].ToString() + "',[OrderStatus]='" + dt1.Rows[i]["OrderStatus"].ToString() + "',[isscyn]=1,[IdToSync]='" + dt1.Rows[i]["IdToSync"].ToString() + "', [ProductId]='" + dt1.Rows[i]["ProductId"].ToString() + "' where [VchNo]='" + dt1.Rows[i]["VchNo"].ToString() + "' and [IdToSync]='" + dt1.Rows[i]["IdToSync"].ToString() + "' ");
                //                        cl.execute("UPDATE PurchaseOrderProductMaster SET PurchaseOrderProductMaster.isscyn=1 from purchaseorderproductmaster inner join purchaseordermaster on purchaseordermaster.VchNo=PurchaseOrderProductMaster.Vchno where purchaseorderproductmaster.VchNo='" + dt1.Rows[i]["VchNo"].ToString() + "' and purchaseordermaster.CompanyId='" + companyId + "'and purchaseorderproductmaster.IdToSync='" + dt1.Rows[i]["IdToSync"].ToString() + "'");
                            
                //                    }
                //                    else
                //                    {
                //                        con.execute("INSERT INTO [dbo].[PurchaseOrderProductMaster]([VchNo],[OrderNo],[OrderRunDate],[ProductName],[Qty],[Free],[Rate],[Per],[BasicAmount],[DiscountPer],[Discount],[Vat],[AddVat],[Total],[isactive],[OrderStatus],[isscyn],[IdToSync],[Description],[ProductId])VALUES('" + dt1.Rows[i]["VchNo"].ToString() + "','" + dt1.Rows[i]["OrderNo"].ToString() + "','" + dt1.Rows[i]["OrderRunDate"].ToString() + "','" + dt1.Rows[i]["ProductName"].ToString() + "','" + dt1.Rows[i]["Qty"].ToString() + "','" + dt1.Rows[i]["Free"].ToString() + "','" + dt1.Rows[i]["Rate"].ToString() + "','" + dt1.Rows[i]["Per"].ToString() + "','" + dt1.Rows[i]["BasicAmount"].ToString() + "','" + dt1.Rows[i]["DiscountPer"].ToString() + "','" + dt1.Rows[i]["Discount"].ToString() + "','" + dt1.Rows[i]["Vat"].ToString() + "','" + dt1.Rows[i]["AddVat"].ToString() + "','" + dt1.Rows[i]["Total"].ToString() + "','" + dt1.Rows[i]["isactive"].ToString() + "','" + dt1.Rows[i]["OrderStatus"].ToString() + "',1,'" + dt1.Rows[i]["IdToSync"].ToString() + "','" + dt1.Rows[i]["Description"].ToString() + "','" + dt1.Rows[i]["ProductId"].ToString() + "')");
                //                        cl.execute("UPDATE PurchaseOrderProductMaster SET PurchaseOrderProductMaster.isscyn=1 from purchaseorderproductmaster inner join purchaseordermaster on purchaseordermaster.VchNo=PurchaseOrderProductMaster.Vchno where purchaseorderproductmaster.VchNo='" + dt1.Rows[i]["VchNo"].ToString() + "' and purchaseordermaster.CompanyId='" + companyId + "'and purchaseorderproductmaster.IdToSync='" + dt1.Rows[i]["IdToSync"].ToString() + "'");
                            
                //                    }
                //                }

                //            }
                //        }
                //        #endregion
                //    }
                //}


                //enablemenu(false);


                ////#region
                ////DataTable dt = new DataTable();
                ////dt = cl.getdataset("select * from PurchaseOrderMaster where isactive=1 and CompanyId=" + companyId + " and isscyn=0");
                ////DataTable dtser = new DataTable();
                ////// DataTable dtup = new DataTable();
                ////if (dt.Rows.Count > 0)
                ////{
                ////    for (int i = 0; i < dt.Rows.Count; i++)
                ////    {
                ////        dtser = con.getdataset("select VchNo,CompanyId,id from PurchaseOrderMaster where isactive=1 and VchNo='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                ////        if (dtser.Rows.Count == 0)
                ////        {
                ////            con.execute("INSERT INTO [dbo].[PurchaseOrderMaster]([VchNo],[OrderNo],[OrderDate],[Terms],[ClientID],[PurchaseType],[Count],[TotalQty],[TotalBasic],[TotalTax],[TotalAddTax],[TotalDiscount],[TotalNet],[isactive],[DispatchDetails],[Remarks],[OrderStatus],[CompanyId],[isGenerated],[GeneDate],[isInvoice],[InvoiceDate],[isscyn]) VALUES('" + dt.Rows[i][0].ToString() + "','" + dt.Rows[i][1].ToString() + "','" + dt.Rows[i][2].ToString() + "','" + dt.Rows[i][3].ToString() + "','" + dt.Rows[i][4].ToString() + "','" + dt.Rows[i][5].ToString() + "','" + dt.Rows[i][6].ToString() + "','" + dt.Rows[i][7].ToString() + "','" + dt.Rows[i][8].ToString() + "','" + dt.Rows[i][9].ToString() + "','" + dt.Rows[i][10].ToString() + "','" + dt.Rows[i][11].ToString() + "','" + dt.Rows[i][12].ToString() + "','" + dt.Rows[i][13].ToString() + "','" + dt.Rows[i][14].ToString() + "','" + dt.Rows[i][15].ToString() + "','" + dt.Rows[i][16].ToString() + "','" + dt.Rows[i][17].ToString() + "','" + dt.Rows[i][18].ToString() + "','" + dt.Rows[i][19].ToString() + "','" + dt.Rows[i][20].ToString() + "','" + dt.Rows[i][21].ToString() + "',1)");
                ////            cl.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                ////            MessageBox.Show("Data inserted in purchaseordermaster in if condition.");
                ////            // con.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                ////        }
                ////        else
                ////        {
                ////            //for (int j = 0; j < dtser.Rows.Count; j++)
                ////            //{
                ////            //if (Convert.ToInt16(dt.Rows[i]["VchNo"].ToString()) == Convert.ToInt16(dtser.Rows[j]["VchNo"].ToString()) && Convert.ToInt16(dt.Rows[i]["CompanyId"].ToString()) == Convert.ToInt16(dtser.Rows[j]["CompanyId"].ToString()))
                ////            //{
                ////            // dtup = con.getdataset("Select pop.*,po.companyId from purchaseorderproductmaster pop inner join purchaseordermaster pm on pm.vchno=pop.vchno where pop.isactive=1 and pop.isscyn=0 and po.companyId=" + companyId + "");
                ////            // DataTable dts1 = new DataTable();

                ////            // dts1 = con.getdataset("Select * from purchaseorderproductmaster where IdToSync=" + dt.Rows[i]["IdToSync"].ToString() + "");
                ////            if (dt.Rows.Count > 0)
                ////            {
                ////                con.execute("Update [dbo].[PurchaseOrderMaster] SET [Vchno]='" + dt.Rows[i]["VchNo"].ToString() + "',[OrderNo]='" + dt.Rows[i]["OrderNo"].ToString() + "', [OrderDate]='" + dt.Rows[i]["OrderDate"].ToString() + "',[Terms]='" + dt.Rows[i]["Terms"].ToString() + "',[ClientID]='" + dt.Rows[i]["ClientID"].ToString() + "',[PurchaseType]='" + dt.Rows[i]["PurchaseType"].ToString() + "',[Count]='" + dt.Rows[i]["Count"].ToString() + "',[TotalQty]='" + dt.Rows[i]["TotalQty"].ToString() + "',[TotalBasic]='" + dt.Rows[i]["TotalBasic"].ToString() + "',[TotalTax]='" + dt.Rows[i]["TotalTax"].ToString() + "',[TotalAddTax]='" + dt.Rows[i]["TotalAddTax"].ToString() + "',[TotalDiscount]='" + dt.Rows[i]["TotalDiscount"].ToString() + "',[TotalNet]='" + dt.Rows[i]["TotalNet"].ToString() + "',[isactive]='" + dt.Rows[i]["isactive"].ToString() + "',[DispatchDetails]='" + dt.Rows[i]["DispatchDetails"].ToString() + "',[Remarks]='" + dt.Rows[i]["Remarks"].ToString() + "',[OrderStatus]='" + dt.Rows[i]["OrderStatus"].ToString() + "',[CompanyId]='" + dt.Rows[i]["CompanyId"].ToString() + "',[isGenerated]='" + dt.Rows[i]["isGenerated"].ToString() + "',[GeneDate]='" + dt.Rows[i]["GeneDate"].ToString() + "',[isInvoice]='" + dt.Rows[i]["isInvoice"].ToString() + "',[InvoiceDate]='" + dt.Rows[i]["InvoiceDate"].ToString() + "',[isscyn]='" + dt.Rows[i]["isscyn"].ToString() + "'where [Vchno]='" + dt.Rows[i]["Vchno"].ToString() + "'");
                ////                cl.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId=" + companyId + "");
                ////                con.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId=" + companyId + "");
                ////                MessageBox.Show("Data inserted in purchaseordermaster in else if cond.");
                ////            }
                ////            else
                ////            {

                ////                con.execute("INSERT INTO [dbo].[PurchaseOrderMaster]([VchNo],[OrderNo],[OrderDate],[Terms],[ClientID],[PurchaseType],[Count],[TotalQty],[TotalBasic],[TotalTax],[TotalAddTax],[TotalDiscount],[TotalNet],[isactive],[DispatchDetails],[Remarks],[OrderStatus],[CompanyId],[isGenerated],[GeneDate],[isInvoice],[InvoiceDate],[isscyn]) VALUES('" + dt.Rows[i][0].ToString() + "','" + dt.Rows[i][1].ToString() + "','" + dt.Rows[i][2].ToString() + "','" + dt.Rows[i][3].ToString() + "','" + dt.Rows[i][4].ToString() + "','" + dt.Rows[i][5].ToString() + "','" + dt.Rows[i][6].ToString() + "','" + dt.Rows[i][7].ToString() + "','" + dt.Rows[i][8].ToString() + "','" + dt.Rows[i][9].ToString() + "','" + dt.Rows[i][10].ToString() + "','" + dt.Rows[i][11].ToString() + "','" + dt.Rows[i][12].ToString() + "','" + dt.Rows[i][13].ToString() + "','" + dt.Rows[i][14].ToString() + "','" + dt.Rows[i][15].ToString() + "','" + dt.Rows[i][16].ToString() + "','" + dt.Rows[i][17].ToString() + "','" + dt.Rows[i][18].ToString() + "','" + dt.Rows[i][19].ToString() + "','" + dt.Rows[i][20].ToString() + "','" + dt.Rows[i][21].ToString() + "','" + dt.Rows[i][22].ToString() + "')");
                ////                cl.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                ////                con.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isscyn]=1 where [VchNo]='" + dt.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dt.Rows[i]["CompanyId"].ToString() + "'");
                ////                MessageBox.Show("Data inserted in purchaseordermaster in else.");
                ////            }

                ////            j++;
                ////        }

                ////    }
                ////}
                ////#endregion

                ////#region
                ////DataTable dt1 = new DataTable();
                ////dt1 = cl.getdataset("select p.CompanyId,pa.* from PurchaseOrderMaster p inner join PurchaseOrderProductMaster pa on p.VchNo=pa.VchNo where p.CompanyId=" + companyId + " and p.isactive=1 and pa.isactive=1 and pa.isscyn<>1");
                ////DataTable dtser1 = new DataTable();

                ////j = 0;
                ////for (int i = 0; i < dt1.Rows.Count; i++)
                ////{
                ////    dtser1 = con.getdataset("select p.CompanyId,pa.* from PurchaseOrderMaster p inner join PurchaseOrderProductMaster pa on p.VchNo=pa.VchNo where p.isactive=1 and pa.isactive=1 and pa.VchNo='" + dt1.Rows[i]["VchNo"].ToString() + "' and p.CompanyId='" + dt1.Rows[i]["CompanyId"].ToString() + "'");
                ////    if (dtser1.Rows.Count == 0)
                ////    {

                ////        con.execute("INSERT INTO [dbo].[PurchaseOrderProductMaster]([VchNo],[OrderNo],[OrderRunDate],[ProductName],[Qty],[Free],[Rate],[Per],[BasicAmount],[DiscountPer],[Discount],[Vat],[AddVat],[Total],[isactive],[OrderStatus],[isscyn],[IdToSync],[Description],[ProductId])VALUES('" + dt1.Rows[i]["VchNo"].ToString() + "','" + dt1.Rows[i]["OrderNo"].ToString() + "','" + dt1.Rows[i]["OrderRunDate"].ToString() + "','" + dt1.Rows[i]["ProductName"].ToString() + "','" + dt1.Rows[i]["Qty"].ToString() + "','" + dt1.Rows[i]["Free"].ToString() + "','" + dt1.Rows[i]["Rate"].ToString() + "','" + dt1.Rows[i]["Per"].ToString() + "','" + dt1.Rows[i]["BasicAmount"].ToString() + "','" + dt1.Rows[i]["DiscountPer"].ToString() + "','" + dt1.Rows[i]["Discount"].ToString() + "','" + dt1.Rows[i]["Vat"].ToString() + "','" + dt1.Rows[i]["AddVat"].ToString() + "','" + dt1.Rows[i]["Total"].ToString() + "','" + dt1.Rows[i]["isactive"].ToString() + "','" + dt1.Rows[i]["OrderStatus"].ToString() + "',1,'" + dt1.Rows[i]["IdToSync"].ToString() + "','" + dt1.Rows[i]["Description"].ToString() + "','" + dt1.Rows[i]["ProductId"].ToString() + "')");
                ////        cl.execute("UPDATE PurchaseOrderProductMaster SET PurchaseOrderProductMaster.isscyn=1 from purchaseorderproductmaster inner join purchaseordermaster on purchaseordermaster.VchNo=PurchaseOrderProductMaster.Vchno where purchaseorderproductmaster.VchNo='" + dt1.Rows[i]["VchNo"].ToString() + "' and purchaseordermaster.CompanyId='" + companyId + "'and purchaseorderproductmaster.IdToSync='" + dt1.Rows[i]["IdToSync"].ToString() + "'");
                ////        //  con.execute("UPDATE [dbo].[PurchaseOrderProductMaster] SET [isscyn]=1 where [VchNo]='" + dt1.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + companyId + "'and isscynID='" + dt1.Rows[i]["isscynID"].ToString() + "'");
                ////        MessageBox.Show("Data inserted in purchaseorderproductmaster in if.");
                ////    }
                ////    else
                ////    {
                ////        //for (int j = 0; j < dtser1.Rows.Count; j++)
                ////        //{
                ////        DataTable dts = new DataTable();

                ////        dts = con.getdataset("Select * from purchaseorderproductmaster where IdToSync=" + dt1.Rows[i]["IdToSync"].ToString() + "");
                ////        if (dts != null && dts.Rows.Count == 1)
                ////        {


                ////            //con.execute("INSERT INTO [dbo].[PurchaseOrderProductMaster]([VchNo],[OrderNo],[OrderRunDate],[ProductName],[Qty],[Free],[Rate],[Per],[BasicAmount],[DiscountPer],[Discount],[Vat],[AddVat],[Total],[isactive],[OrderStatus],[isscyn])VALUES('" + dt1.Rows[i]["VchNo"].ToString() + "','" + dt1.Rows[i]["OrderNo"].ToString() + "','" + dt1.Rows[i]["OrderRunDate"].ToString() + "','" + dt1.Rows[i]["ProductName"].ToString() + "','" + dt1.Rows[i]["Qty"].ToString() + "','" + dt1.Rows[i]["Free"].ToString() + "','" + dt1.Rows[i]["Rate"].ToString() + "','" + dt1.Rows[i]["Per"].ToString() + "','" + dt1.Rows[i]["BasicAmount"].ToString() + "','" + dt1.Rows[i]["DiscountPer"].ToString() + "','" + dt1.Rows[i]["Discount"].ToString() + "','" + dt1.Rows[i]["Vat"].ToString() + "','" + dt1.Rows[i]["AddVat"].ToString() + "','" + dt1.Rows[i]["Total"].ToString() + "','" + dt1.Rows[i]["isactive"].ToString() + "','" + dt1.Rows[i]["OrderStatus"].ToString() + "','" + dt1.Rows[i]["isscyn"].ToString() + "')");
                ////            con.execute("Update [dbo].[PurchaseOrderProductMaster] SET [Vchno]='" + dt1.Rows[i]["VchNo"].ToString() + "',[OrderNo]='" + dt1.Rows[i]["OrderNo"].ToString() + "', [OrderRunDate]='" + dt1.Rows[i]["OrderRunDate"].ToString() + "',[ProductName]='" + dt1.Rows[i]["ProductName"].ToString() + "',[Qty]='" + dt1.Rows[i]["Qty"].ToString() + "',[Free]='" + dt1.Rows[i]["Free"].ToString() + "',[Rate]='" + dt1.Rows[i]["Rate"].ToString() + "',[Per]='" + dt1.Rows[i]["Per"].ToString() + "',[BasicAmount]='" + dt1.Rows[i]["BasicAmount"].ToString() + "',[DiscountPer]='" + dt1.Rows[i]["DiscountPer"].ToString() + "',[Discount]='" + dt1.Rows[i]["Discount"].ToString() + "',[Vat]='" + dt1.Rows[i]["Vat"].ToString() + "',[AddVat]='" + dt1.Rows[i]["AddVat"].ToString() + "',[Total]='" + dt1.Rows[i]["Total"].ToString() + "',[isactive]='" + dt1.Rows[i]["isactive"].ToString() + "',[OrderStatus]='" + dt1.Rows[i]["OrderStatus"].ToString() + "',[isscyn]=1,[IdToSync]='" + dt1.Rows[i]["IdToSync"].ToString() + "', [ProductId]='" + dt1.Rows[i]["ProductId"].ToString() + "' where [VchNo]='" + dt1.Rows[i]["VchNo"].ToString() + "' and [IdToSync]='" + dt1.Rows[i]["IdToSync"].ToString() + "' ");
                ////            cl.execute("UPDATE PurchaseOrderProductMaster SET PurchaseOrderProductMaster.isscyn=1 from purchaseorderproductmaster inner join purchaseordermaster on purchaseordermaster.VchNo=PurchaseOrderProductMaster.Vchno where purchaseorderproductmaster.VchNo='" + dt1.Rows[i]["VchNo"].ToString() + "' and purchaseordermaster.CompanyId='" + companyId + "'and purchaseorderproductmaster.IdToSync='" + dt1.Rows[i]["IdToSync"].ToString() + "'");
                ////            // con.execute("UPDATE [dbo].[PurchaseOrderProductMaster] SET [isscyn]=1 where [VchNo]='" + dt1.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + companyId + "'and isscynID='" + dt1.Rows[i]["isscynID"].ToString() + "'");
                ////            MessageBox.Show("Data inserted in purchaseorderproductmaster in else if.");
                ////        }
                ////        else
                ////        {

                ////            con.execute("INSERT INTO [dbo].[PurchaseOrderProductMaster]([VchNo],[OrderNo],[OrderRunDate],[ProductName],[Qty],[Free],[Rate],[Per],[BasicAmount],[DiscountPer],[Discount],[Vat],[AddVat],[Total],[isactive],[OrderStatus],[isscyn],[IdToSync],[Description],[ProductId])VALUES('" + dt1.Rows[i]["VchNo"].ToString() + "','" + dt1.Rows[i]["OrderNo"].ToString() + "','" + dt1.Rows[i]["OrderRunDate"].ToString() + "','" + dt1.Rows[i]["ProductName"].ToString() + "','" + dt1.Rows[i]["Qty"].ToString() + "','" + dt1.Rows[i]["Free"].ToString() + "','" + dt1.Rows[i]["Rate"].ToString() + "','" + dt1.Rows[i]["Per"].ToString() + "','" + dt1.Rows[i]["BasicAmount"].ToString() + "','" + dt1.Rows[i]["DiscountPer"].ToString() + "','" + dt1.Rows[i]["Discount"].ToString() + "','" + dt1.Rows[i]["Vat"].ToString() + "','" + dt1.Rows[i]["AddVat"].ToString() + "','" + dt1.Rows[i]["Total"].ToString() + "','" + dt1.Rows[i]["isactive"].ToString() + "','" + dt1.Rows[i]["OrderStatus"].ToString() + "',1,'" + dt1.Rows[i]["IdToSync"].ToString() + "','" + dt1.Rows[i]["Description"].ToString() + "','" + dt1.Rows[i]["ProductId"].ToString() + "')");
                ////            cl.execute("UPDATE PurchaseOrderProductMaster SET PurchaseOrderProductMaster.isscyn=1 from purchaseorderproductmaster inner join purchaseordermaster on purchaseordermaster.VchNo=PurchaseOrderProductMaster.Vchno where purchaseorderproductmaster.VchNo='" + dt1.Rows[i]["VchNo"].ToString() + "' and purchaseordermaster.CompanyId='" + companyId + "'and purchaseorderproductmaster.IdToSync='" + dt1.Rows[i]["IdToSync"].ToString() + "'");
                ////            //  con.execute("UPDATE [dbo].[PurchaseOrderProductMaster] SET [isscyn]=1 where [VchNo]='" + dt1.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + companyId + "'and isscynID='" + dt1.Rows[i]["isscynID"].ToString() + "'");
                ////            MessageBox.Show("Data inserted in purchaseorderproductmaster in else.");
                ////        }
                ////        j++;
                ////        // }
                ////    }

                ////}
                ////#endregion

                //#region
                //DataTable dtd = new DataTable();
                //dtd = cl.getdataset("select * from PurchaseOrderMaster where isactive=0 and CompanyId=" + companyId + "");
                //DataTable dtserd = new DataTable();
                //j = 0;
                //if (dtd.Rows.Count > 0)
                //{
                //    for (int i = 0; i < dtd.Rows.Count; i++)
                //    {
                //        dtserd = con.getdataset("select VchNo,CompanyId,id from PurchaseOrderMaster where isactive=1 and VchNo='" + dtd.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + dtd.Rows[i]["CompanyId"].ToString() + "'");

                //        if (Convert.ToInt16(dtd.Rows[i]["VchNo"].ToString()) == Convert.ToInt16(dtserd.Rows[j]["VchNo"].ToString()) && Convert.ToInt16(dtd.Rows[i]["CompanyId"].ToString()) == Convert.ToInt16(dtserd.Rows[0]["CompanyId"].ToString()))
                //        {
                //            con.execute("UPDATE [dbo].[PurchaseOrderMaster] SET [isactive]=0 where [VchNo]='" + dtd.Rows[i]["VchNo"].ToString() + "' and CompanyId=" + companyId + "");
                //        }
                //        else
                //        { }
                //        j++;


                //    }
                //}
                //#endregion

                //#region
                //DataTable dtd2 = new DataTable();
                //dtd2 = cl.getdataset("select p.CompanyId,pa.* from PurchaseOrderMaster p inner join PurchaseOrderProductMaster pa on p.VchNo=pa.VchNo where p.CompanyId=" + companyId + " and p.isactive=0 and pa.isactive=0 ");
                //DataTable dtserd2 = new DataTable();

                //j = 0;
                //for (int i = 0; i < dtd2.Rows.Count; i++)
                //{
                //    dtserd2 = con.getdataset("select p.CompanyId,pa.* from PurchaseOrderMaster p inner join PurchaseOrderProductMaster pa on p.VchNo=pa.VchNo where pa.isactive=1 and pa.VchNo='" + dtd2.Rows[i]["VchNo"].ToString() + "' and p.CompanyId='" + dtd2.Rows[i]["CompanyId"].ToString() + "'");

                //    if (dtserd2.Rows.Count > 0)
                //    {
                //        if (Convert.ToInt16(dtd2.Rows[i]["VchNo"].ToString()) == Convert.ToInt16(dtserd2.Rows[j]["VchNo"].ToString()) && Convert.ToInt16(dtd2.Rows[i]["CompanyId"].ToString()) == Convert.ToInt16(dtserd2.Rows[j]["CompanyId"].ToString()) && Convert.ToInt16(dtd2.Rows[i]["IdToSync"].ToString()) == Convert.ToInt16(dtserd2.Rows[j]["IdToSync"].ToString()))
                //        {
                //            con.execute("UPDATE [dbo].[PurchaseOrderProductMaster] SET [isactive]=1 where [VchNo]='" + dtd2.Rows[i]["VchNo"].ToString() + "' and CompanyId='" + companyId + "'and IdToSync='" + dtd2.Rows[i]["IdToSync"].ToString() + "'");
                //        }
                //        else
                //        { }
                //        j++;
                //    }

                //}
                //#endregion
                //enablemenu(true);
                //MessageBox.Show("Data is synchronized.");
            }
            catch { }
        }
        
        private void getsync()
        {
            try
            {
                DataTable sync = cl.getdataset("select * from sync");

                for (int i = 0; i < sync.Rows.Count; i++)
                {
                    string str = con.executereturn(sync.Rows[i]["query"].ToString().Replace("\"", "'"));

                    if (str !=null)
                    {
                        cl.execute("delete from sync where id='" + sync.Rows[i]["id"].ToString() + "'");
                    }
                    else
                    {
                        MessageBox.Show("Syncronization is not been Completed. Please check your Internet Connection or Contact Administrator");
                        break;

                    }
                  
                }
                MessageBox.Show("Syncronization has been successfully");
            }
            catch
            {
            }

        }

        private void Timer1_Tick(object sender, EventArgs e)
        {
            try
            {
                toolStripProgressBar1.Increment(3);
                if (toolStripProgressBar1.Value == toolStripProgressBar1.Maximum)
                {                    
                    timer1.Stop();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message.ToString());
            }


        }

        private void purchaseOrderReportToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Purchase_Order_Master_Report frm1 = new Purchase_Order_Master_Report();
            frm1.MdiParent = this;
            frm1.StartPosition = FormStartPosition.CenterScreen;
            frm1.Show();
        }
    }
}
